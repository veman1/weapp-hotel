<style lang="less">
  @blue: #26AAF2;
  page {
    background-color: #F5F5F5;
  }

  .g-banner {
    position: relative;
    .bannerbottom {
      display: flex;
      align-items: center;
      position: absolute;
      bottom: 0;
      width: 100%;
      height: 80rpx;
      background-image: linear-gradient(to bottom, rgba(255,255,255,.5) 0, rgba(0,0,0,.5) 100%);
      color: #fff;
      >text {
        white-space: nowrap;
        padding: 0 1em;
        font-size: 32rpx;
        white-space: nowrap;
        overflow: hidden;
        width: 80%;
        text-overflow: ellipsis;
      }
      .button {
        position: absolute;
        right: 30rpx;
        top: 50%;
        transform: translate(0, -50%);
        display: flex;
        align-items: center;
        font-size: 22rpx;
        background-color: rgba(0,0,0,.6);
        height: 2.2em;
        border-radius: 1.1em;
        padding: 0 .7em;
        image {
          width: 1.25em;
          height: 1.1em;
          margin: 0 10rpx 0 0;
        }
      }
    }
  }

  .g-cells {
    background-color: #fff;
    border-bottom: 1px solid #e6e6e6;
  }

  .panel {
    padding: 0 0 0 35rpx;
  }

  .comment {
    display: flex;
    align-items: flex-end;
    >text {
      color: #409EE4;
      font-size: 24rpx;
      &.score { font-size: 1.3em; }
    }
    >view { color: #bbb; margin: 0 0 0 .6em; }
  }

  .address {
    >view {
      white-space: nowrap;
      max-width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    >text { color: #aaa; font-weight: 500; }
  }

  .time {
    display: flex;
    margin: 25rpx 0 0;
    background-color: #fff;
    picker:not(last-child) { border-right: 1px solid #eee; }
    .item {
      box-sizing: border-box;
      width: 375rpx;
      height: 92rpx;
      display: flex;
      align-items: center;
      padding: 0 0 0 1em;
      font-size: 24rpx;
      >text { font-size: 1.2em; margin: 0 .6em 0 0; }
      >view { color: #aaa; }
    }
  }

  .rooms {
    border-top: 1px solid #eee;
    .room {
      border-bottom: 1px solid #eee;
      .rtitle {
        position: relative;
        height: 160rpx;
        background-color: #fff;
        >image {
          position: absolute;
          top: 20rpx;
          left: 30rpx;
          width: 120rpx;
          height: 120rpx;
          border-radius: 4px;
        }
        > text {
          position: absolute;
          bottom: 100rpx;
          left: 170rpx;
          font-size: 32rpx;
        }
        .stit {
          position: absolute;
          top: 60rpx;
          left: 170rpx;
          color: #666;
          font-size: 22rpx;
        }
        .ft {
          position: absolute;
          right: 80rpx;
          top: 50%;
          transform: translate(0, -50%);
          font-size: 22rpx;
          color: #999;
          text {
            color: #FF7200;
            font-size: 38rpx;
            font-weight: bold;
            white-space: nowrap;
            &.unit { font-size: 20rpx; }
          }
        }
        > i {
          @arrow: #409EE4;
          display: flex;
          justify-content: center;
          align-items: center;
          position: absolute;
          top: 50%;
          right: 25rpx;
          transform: translate(0, -50%);
          width: 30rpx;
          height: 30rpx;
          border-radius: 50%;
          border: 1px solid @arrow;
          &:after {
            content: '';
            width: 30%;
            height: 30%;
            border-right: 1px solid @arrow;
            border-bottom: 1px solid @arrow;
            transform-origin: 50% 50%;
            transform: rotate(45deg) translate(-25%, -25%);
          }
        }
      }
      .plist {
        display: none;
        .pitem {}
      }
      &.expand {
        .rtitle > i:after {
          transform: rotate(-135deg) translate(-25%, -25%);
        }
        .plist {
          display: block;
        }
      }
    }
  }

  .flist {
    background-color: #fff;
    .fitem {
      margin: 20rpx 0 0;
    }
    &:before {
      content: '';
      display: table;
    }
  }

  .ititle {
    display: flex;
    align-items: center;
    color: @blue;
    background-color: #F5F5F5;
    height: 84rpx;
    padding: 0 .5em;
    font-size: 30rpx;
  }
  .ilist--flex {
    display: flex;
    flex-wrap: wrap;
    padding: 0 50rpx 20rpx;
    > text {
      box-sizing: border-box;
      width: 33.33%;
      padding: 0 .5em 0 0;
      margin: .4em 0 .2em;
    }
  }
  .ititle2 {
    border-left: 3px solid @blue;
    font-size: 28rpx;
    padding: 0 0 0 .4em;
    color: @blue;
  }
  .icontent {
    background-color: #fff;
    padding: .65em .55em;
  }
</style>

<template>
  <view class="g-banner">
    <slider :list.sync="gallery"></slider>
    <view class="bannerbottom">
      <text>{{hotel.name}}</text>
      <view wx:if="{{ !camButtonHide }}" class="button">
        <image mode="aspectFit" src="/images/hdetail_camera.png" />
        <text>相册</text>
      </view>
    </view>
  </view>

  <view class="g-cells panel">
    <cell1 ft="点评" @tap.user="toComment">
      <view class="comment" slot="bd">
        <text class="score">{{hotel.score}}</text>
        <text>分</text>
        <view>{{hotel.comment_count}}条点评</view>
      </view>
    </cell1>
    <cell2 ft="地图" @tap.user="showLocation">
      <view class="address" slot="bd">
        <view>{{hotel.address}}</view>
        <text>【{{hotel.region}}】</text>
      </view>
    </cell2>
  </view>

  <view class="time">
    <picker mode="date" start="{{arriveStart.dateStr}}" value="{{arrive.dateStr}}" @change="selectDate(arrive)">
      <view class="item">
        <text>{{arrive.m}}月{{arrive.d}}日</text>
        <view>{{arrive.isTd ? '今天 ' : arrive.isTmr ? '明天 ' : arrive.isDATmr ? '后天 ' : ''}}入住</view>
      </view>
    </picker>
    <picker mode="date" start="{{leaveStart.dateStr}}" value="{{leave.dateStr}}" @change="selectDate(leave)">
      <view class="item">
        <text>{{leave.m}}月{{leave.d}}日</text>
        <view>{{leave.isTd ? '今天 ' : leave.isTmr ? '明天 ' : leave.isDATmr ? '后天 ' : ''}}离店</view>
      </view>
    </picker>
  </view>

  <view class="rooms">
    <repeat for="{{ hotel.roomList }}">
      <view class="room {{ item.expand ? 'expand' : '' }}">
        <view class="rtitle" @tap="roomtap({{ index }})">
          <image src="{{ item.img }}" />
          <text>{{item.name}}</text>
          <view class="stit">{{item.size}}m² {{item.bed_count}} {{item.floors}}</view>
          <view class="ft">
            <text class="unit">￥</text>
            <text>{{item.price}}</text>起
          </view>
          <i />
        </view>
        <view class="plist">
          <repeat for="{{ item.priceList }}" index="pindex">
            <priceitem :info="item" :pindex="pindex" :index="index" @booktap.user="booktap"></priceitem>
          </repeat>
        </view>
      </view>
    </repeat>
  </view>

  <view class="facility">
    <view class="ititle">酒店设施</view>
    <view class="flist">
      <repeat for="{{hotel.facility_list}}">
        <view class="fitem">
          <view class="ititle2">{{item.cname}}</view>
          <view class="ilist--flex">
            <repeat for="{{item.list}}">
              <text>{{item}}</text>
            </repeat>
          </view>
        </view>
      </repeat>
    </view>
  </view>

  <view class="info_list">
    <repeat for="{{ hotel.infoList }}">
      <view class="item">
        <view class="ititle">{{item.text}}</view>
        <view class="icontent">{{item.value}}</view>
      </view>
    </repeat>
  </view>
</template>

<script>
import wepy from 'wepy'

import Slider from '../components/slider'
import Cell from '../components/cell'
import Priceitem from '../components/priceitem'

import api from '../api'
import w from '../w'

import mocks from '../mocks'
const hotel = mocks.hotel

export default class HotelDetail extends wepy.page {
  config = {
    navigationBarTitleText: '酒店详情'
  }

  components = {
    slider: Slider,
    priceitem: Priceitem,
    cell1: Cell,
    cell2: Cell
  }

  data = {
    camButtonHide: true,
    arrive: {},
    arriveStart: {},
    leave: {},
    leaveStart: {},
    hotel: {}
  }

  computed = {
    gallery () {
      return this.hotel.gallery
    },
  }

  methods = {
    selectDate (id, {detail: {value}}) {
      this.$parent[id] = this[id] = new Date(value).format()
    },
    toComment () {
      wepy.navigateTo({ url: `/pages/comment` })
    },
    showLocation () {
      wepy.openLocation({
        latitude: this.hotel.latitude,
        longitude: this.hotel.longitude
      })
    },
    roomtap (i) {
      this.hotel.roomList.map((v, j) => v.expand = i === j ? !v.expand : !1)
    },
    booktap (id) {
      if (this.arrive.date < this.leave.date) wepy.navigateTo({ url: `/pages/order?id=${id}` })
      else w.showErr('请选择有效日期')
    }
  }

  onLoad (o) {
    wepy.showLoading()
    api.getHotelById(o.id)
      .then(res => this.hotel = res.data || w.showErr('no data'))
      .catch(e => w.showErr(e.errMsg))
      .then(() => wepy.hideLoading())
      .then(() => {
        this.hotel = hotel
        this.$apply()
      })
    this.arriveStart
      = this.$parent.arrive
      = this.arrive
      = new Date().format()
    this.leaveStart
      = this.$parent.leave
      = this.leave
      = new Date().offsetDay(1).format()
  }
}

</script>
